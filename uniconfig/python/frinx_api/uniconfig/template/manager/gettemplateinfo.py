# generated by datamodel-codegen

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel
from pydantic import ConfigDict
from pydantic import Field


class Input(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    template_node_id: str = Field(..., alias='template-node-id')
    """
    Identifier of the template.
    """


class BaseTypeItem(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    type: Optional[str] = None
    constraints: Optional[list[str]] = None


class BaseTypes(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    base_type: Optional[list[BaseTypeItem]] = Field(None, alias='base-type')


class PathItem(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    path: Optional[str] = None
    path_description: Optional[str] = Field(None, alias='path-description')
    default_value: Optional[str] = Field(None, alias='default-value')


class Paths(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    path: Optional[list[PathItem]] = None


class VariableItem(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    base_types: Optional[BaseTypes] = Field(
        None,
        alias='base-types',
        title='template.manager.gettemplateinfooutputfields.variables.variable.BaseTypes',
    )
    variable_name: Optional[str] = Field(None, alias='variable-name')
    type: Optional[str] = None
    paths: Optional[Paths] = Field(
        None,
        title='template.manager.gettemplateinfooutputfields.variables.variable.Paths',
    )
    type_description: Optional[str] = Field(None, alias='type-description')


class Variables(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    variable: Optional[list[VariableItem]] = None


class Output(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    variables: Optional[Variables] = Field(
        None, title='template.manager.gettemplateinfooutputfields.Variables'
    )
