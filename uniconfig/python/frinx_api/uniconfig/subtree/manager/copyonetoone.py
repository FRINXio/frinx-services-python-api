# generated by datamodel-codegen

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, ConfigDict, Field

from . import Datastore, Operation


class Input(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    source_datastore: Optional[Datastore] = Field(None, alias='source-datastore')
    target_datastore: Optional[Datastore] = Field(None, alias='target-datastore')
    target_path: Optional[str] = Field(None, alias='target-path')
    """
    Target path under which data from source paths is put/merged.
    """
    operation: Optional[Operation] = None
    source_path: Optional[str] = Field(None, alias='source-path')
    """
    Source path to data which is put/merged under target nodes.
    """
