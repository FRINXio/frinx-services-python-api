# generated by datamodel-codegen

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel
from pydantic import ConfigDict
from pydantic import Field

from ...frinx import types
from . import Datastore
from . import Operation


class Input(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    source_datastore: Optional[Datastore] = Field(None, alias='source-datastore')
    target_datastore: Optional[Datastore] = Field(None, alias='target-datastore')
    operation: Optional[Operation] = None
    target_paths: Optional[list[str]] = Field(None, alias='target-paths')
    """
    Target paths under which data from source paths is put/merged.
    """
    source_path: Optional[str] = Field(None, alias='source-path')
    """
    Source path to data which is put/merged under target nodes.
    """


class Output(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    result: Optional[types.OperationResultType] = None
    error_message: Optional[str] = Field(None, alias='error-message')
    """
    Error message describing operation failure.
    """
