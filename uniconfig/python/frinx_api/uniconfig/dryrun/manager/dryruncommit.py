# generated by datamodel-codegen

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel
from pydantic import ConfigDict
from pydantic import Field


class Input(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    do_rollback: Optional[bool] = Field(None, alias='do-rollback')
    """
    Controls whether to roll back successfully configured devices in case of failure.
    Applies when configuring multiple devices within a single COMMIT RPC.
    By default, if N devices succeed, but the N+1 device fails,
    those N devices will be rolled back unless this option is set to false.
    The N+1 device will always be rolled back regardless of this option.
    """


class NodeResultItem(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    node_id: Optional[str] = Field(None, alias='node-id')
    configuration: Optional[str] = None
    """
    Cli commands or netconf RPCs that needs to be executed
    on node to reach intended configuration state
    """


class NodeResults(BaseModel):
    """
    Result of configuration and rollback on each configured network element.
    """

    model_config = ConfigDict(
        populate_by_name=True,
    )
    node_result: Optional[list[NodeResultItem]] = Field(None, alias='node-result')
    """
    Result of configuration and rollback on the given node.
    Rollback status is empty if rollback was not executed.
    """


class Output(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    node_results: Optional[NodeResults] = Field(
        None,
        alias='node-results',
        title='dryrun.manager.dryruncommitoutputfields.NodeResults',
    )
    """
    Result of configuration and rollback on each configured network element.
    """
