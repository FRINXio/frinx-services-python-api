# generated by datamodel-codegen

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel
from pydantic import ConfigDict
from pydantic import Field


class Type(Enum):
    """
    Type of geometry.
    """

    Point = 'Point'


class DeviceGeoLocation(BaseModel):
    """
    Device geo-location schema
    """

    model_config = ConfigDict(
        populate_by_name=True,
    )
    type: Type
    """
    Type of geometry.
    """
    coordinates: list[float] = Field(..., min_length=2)
    """
    Device location coordinates providing latitude and longitude.
    """
    bbox: Optional[list[float]] = Field(None, min_length=4)
    """
    Defining the area around the device, with four elements indicating its boundaries.
    """
